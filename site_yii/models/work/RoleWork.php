<?php


namespace app\models\work;

use app\models\common\Role;

class RoleWork extends Role
{
    public $functions;
    public $role_id;

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name'], 'required'],
            [['functions', 'role_id'], 'safe'],
            [['name'], 'string', 'max' => 1000],
        ];
    }

    public function getFunctions()
    {
        $funcs = RoleFunctionRoleWork::find()->where(['role_id' => $this->id])->all();
        $result = [];
        foreach ($funcs as $func)
            $result[] = $func->role_function_id;

        return $result;
    }

    public function getAllow()
    {
        $result = "";
        $allows = RoleFunctionRoleWork::find()->where(['role_id' => $this->id])->all();
        foreach ($allows as $allow)
            $result .= '&#9989; '.$allow->roleFunction->name.'<br>';

        return $result;
    }

    public function getDeny()
    {
        $result = "";
        $allows = RoleFunctionRoleWork::find()->where(['role_id' => $this->id])->all();
        $functions = RoleFunctionWork::find()->all();
        $flag = false;
        for ($i = 0; $i < count($functions); $i++)
        {
            for ($j = 0; $j < count($allows); $j++)
                if ($functions[$i]->id == $allows[$j]->role_function_id)
                    $flag = true;
            if (!$flag)
                $result .= '&#10060; '.$functions[$i]->name.'<br>';
            $flag = false;
        }

        return $result;
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        $funcs = RoleFunctionRoleWork::find()->where(['role_id' => $this->id])->all();
        foreach ($funcs as $func)
            $func->delete();

        if($this->functions !== '')
            foreach ($this->functions as $function)
            {
                $func = RoleFunctionRoleWork::find()->where(['role_id' => $this->id])->andWhere(['role_function_id' => $function])->one();
                if ($func == null) $func = new RoleFunctionRoleWork();
                $func->role_id = $this->id;
                $func->role_function_id = $function;
                $func->save();
            }
    }

    public function beforeDelete()
    {
        $funcs = RoleFunctionRoleWork::find()->where(['role_id' => $this->id])->all();
        foreach ($funcs as $func)
            $func->delete();

        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }
}