<?php

namespace app\models\work;

use app\models\common\AccessLevel;
use app\models\common\RoleFunction;
use app\models\common\User;
use app\models\null\UserNull;
use app\models\null\RoleFunctionNull;
use Yii;


class AccessLevelWork extends AccessLevel
{
    public $weeks;
    public $days;
    public $hours;

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['user_id', 'role_function_id', 'start_time', 'end_time'], 'required'],
            [['user_id', 'role_function_id', 'weeks', 'days', 'hours'], 'integer'],
            [['start_time', 'end_time'], 'safe'],
            [['role_function_id'], 'exist', 'skipOnError' => true, 'targetClass' => RoleFunction::className(), 'targetAttribute' => ['role_function_id' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']],
        ];
    }

    public function getUserWork()
    {
        $try = $this->hasOne(UserWork::className(), ['id' => 'user_id']);
        return $try->all() ? $try : new UserNull();
    }

    public function getRoleFunctionWork()
    {
        $try = $this->hasOne(RoleFunctionWork::className(), ['id' => 'role_function_id']);
        return $try->all() ? $try : new RoleFunctionNull();
    }

    public function afterSave($insert, $changedAttributes)
    {
        $date = date('Y-m-d H:i:s');
        $date = new \DateTime($date);
        $date->modify('+'.$this->weeks.' weeks');
        $date->modify('+'.$this->days.' days');
        $date->modify('+'.$this->hours.' hours');
        $sqlStr = "CREATE EVENT `token_event".$this->id."` ON SCHEDULE AT '".date('Y-m-d H:i:s', strtotime($date->format('Y-m-d H:i:s')))."' ON COMPLETION NOT PRESERVE ENABLE DO DELETE FROM `access_level` WHERE `id`=".$this->id;
        Yii::$app->db->createCommand($sqlStr)->execute();
    }

    public function beforeSave($insert)
    {
        $this->start_time = date('Y-m-d H:i:s');

        $date = date('Y-m-d H:i:s');
        $date = new \DateTime($date);
        $date->modify('+'.$this->weeks.' weeks');
        $date->modify('+'.$this->days.' days');
        $date->modify('+'.$this->hours.' hours');

        $this->end_time = date('Y-m-d H:i:s', strtotime($date->format('Y-m-d H:i:s')));
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
